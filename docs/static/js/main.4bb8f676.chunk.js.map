{"version":3,"sources":["components/Practice.js","services/cardService.js","components/CardForm.js","components/CardPreview.js","components/CardList.js","App.js","index.js"],"names":["Practice","state","currentIndex","isFront","handleCardFlip","setState","handleNextCard","cards","props","length","handlePrevCard","this","term","definition","className","type","onClick","Component","saveCard","card","id","fetch","method","headers","body","JSON","stringify","then","res","json","updateCard","createCard","CardForm","onSave","onCancel","undefined","useState","setTerm","setDefinition","clearForm","onReset","onSubmit","event","preventDefault","htmlFor","name","value","onChange","target","CardPreview","onRemove","onUpdate","isEditMode","setIsEditMode","handleToggleEdit","current","onEdit","View","setIsFront","window","confirm","destroyCard","CardList","onAdd","to","map","App","setCards","useEffect","basename","path","existing","c","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4bb8f676.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class Practice extends Component {\n  state = {\n    currentIndex: 0,\n    isFront: true,\n  };\n\n  handleCardFlip = () => {\n    this.setState(state => ({\n      isFront: !state.isFront,\n    }));\n  };\n\n  handleNextCard = () => {\n    const { cards } = this.props;\n    this.setState(state => ({\n      currentIndex: (state.currentIndex + 1) % cards.length,\n    }));\n  };\n\n  handlePrevCard = () => {\n    const { cards } = this.props;\n    this.setState(state => ({\n      currentIndex: (state.currentIndex - 1 + cards.length) % cards.length,\n    }));\n  };\n\n  render() {\n    const { cards } = this.props;\n    const { currentIndex, isFront } = this.state;\n    const { term = '', definition = '' } =\n      cards && cards.length && cards[currentIndex];\n\n    return (\n      <div className=\"practiceContainer\">\n        <h3 className=\"practiceContainer_title\">Practice</h3>\n        <div className=\"practiceContainer_progress\">\n          {currentIndex + 1}/{cards.length}\n        </div>\n        <div className=\"practiceContainer_card\">\n          <div className=\"practiceContainer_term\">\n            {isFront ? term : definition}\n          </div>\n          <div className=\"practiceContainer_btns\">\n            <button type=\"button\" className=\"btn\" onClick={this.handleCardFlip}>\n              {isFront ? 'Show back' : 'Show front'}\n            </button>\n            <div>\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={this.handlePrevCard}\n              >\n                Previous\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={this.handleNextCard}\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export function getCards() {\n  return fetch('/api/card').then(res => res.json());\n}\n\nexport function destroyCard(id) {\n  return fetch(`/api/card/${id}`, { method: 'DELETE' });\n}\n\nexport function saveCard(card) {\n  return card.id ? updateCard(card) : createCard(card);\n}\n\nexport function createCard(card) {\n  return fetch('/api/card', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(card),\n  }).then(res => res.json());\n}\n\nfunction updateCard(card) {\n  return fetch(`/api/card/${card.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(card),\n  }).then(res => res.json());\n}\n","import React, { useState } from 'react';\nimport { saveCard } from '../services/cardService';\n\nexport function CardForm({ onSave, onCancel, card }) {\n  const id = card && card.id ? card.id : undefined;\n\n  const [term, setTerm] = useState(id ? card.term : '');\n  const [definition, setDefinition] = useState(id ? card.definition : '');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    saveCard({ term, definition, id }).then(card => {\n      clearForm();\n      onSave && typeof onSave === 'function' && onSave(card);\n    });\n  }\n\n  function clearForm() {\n    setTerm('');\n    setDefinition('');\n    onCancel && typeof onCancel === 'function' && onCancel();\n  }\n\n  function handleTermChange(event) {\n    const { value } = event.target;\n    setTerm(value);\n  }\n\n  function handleDefChange(event) {\n    const { value } = event.target;\n    setDefinition(value);\n  }\n\n  return (\n    <div className=\"preview preview_front\">\n      <h4 className=\"form_title\">{id ? 'Update Card' : 'Add Card'}</h4>\n      <form className=\"form\" onReset={clearForm} onSubmit={handleSubmit}>\n        <div>\n          <label\n            className=\"form_text-title\"\n            htmlFor={`card_term_${id ? id : 'new'}`}\n          >\n            Term\n          </label>\n          <textarea\n            className=\"form_text\"\n            id={`card_term_${id ? id : 'new'}`}\n            name={`card_term_${id ? id : 'new'}`}\n            value={term}\n            onChange={handleTermChange}\n          />\n        </div>\n        <div>\n          <label\n            className=\"form_text-title\"\n            htmlFor={`card_definition_${id ? id : 'new'}`}\n          >\n            Definition\n          </label>\n          <textarea\n            className=\"form_text\"\n            id={`card_definition_${id ? id : 'new'}`}\n            name={`card_term_${id ? id : 'new'}`}\n            value={definition}\n            onChange={handleDefChange}\n          />\n        </div>\n        <div className=\"btn_form\">\n          <button type=\"submit\" className=\"btn\">\n            Save\n          </button>\n          <button type=\"reset\" className=\"btn\">\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { destroyCard } from '../services/cardService';\nimport { CardForm } from './CardForm';\n\nexport function CardPreview({ onRemove, onUpdate, ...card }) {\n  const [isEditMode, setIsEditMode] = useState(false);\n  function handleToggleEdit() {\n    setIsEditMode(current => !current);\n  }\n  return isEditMode ? (\n    <CardForm onCancel={handleToggleEdit} onSave={onUpdate} card={card} />\n  ) : (\n    <View {...card} onEdit={handleToggleEdit} onRemove={onRemove} />\n  );\n}\n\nexport const View = ({ id, term, definition, onEdit, onRemove }) => {\n  const [isFront, setIsFront] = useState(true);\n\n  function handleCardFlip() {\n    setIsFront(current => !current);\n  }\n\n  function handleDelete() {\n    const confirm = window.confirm(`Are you sure wish to delete \"${term}\"?`);\n    if (confirm) {\n      destroyCard(id).then(() => {\n        onRemove && typeof onRemove === 'function' && onRemove(id);\n      });\n    }\n  }\n\n  return (\n    <div\n      className={`preview preview_front ${\n        isFront ? '' : 'preview preview_back'\n      }`}\n    >\n      <h4 className=\"preview_term\">{isFront ? term : definition}</h4>\n      <div className=\"preview_btns\">\n        <button type=\"button\" className=\"btn\" onClick={handleCardFlip}>\n          {isFront ? 'Show back' : 'Show front'}\n        </button>\n        <div>\n          <button type=\"button\" className=\"btn\" onClick={onEdit}>\n            Edit\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={handleDelete}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport { CardForm } from './CardForm';\nimport { CardPreview } from './CardPreview';\n\nexport function CardList({ cards, onAdd, onRemove, onUpdate }) {\n  return (\n    <div>\n      <div className=\"practiceContainer_link\">\n        <Link className=\"practiceContainer_link-title\" to=\"/practice\">\n          Practice Deck\n        </Link>\n      </div>\n      <div className=\"cardListContainer\">\n        <CardForm onSave={onAdd} />\n        {cards.map(card => (\n          <CardPreview\n            key={card.id}\n            {...card}\n            onUpdate={onUpdate}\n            onRemove={onRemove}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Router } from '@reach/router';\nimport { Practice } from './components/Practice';\nimport { getCards } from './services/cardService';\nimport { CardList } from './components/CardList';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    getCards().then(setCards);\n  }, []);\n\n  function handleRemove(id) {\n    setCards(existing => existing.filter(c => c.id !== id));\n  }\n\n  function handleAdd(card) {\n    setCards(existing => [...existing, card]);\n  }\n\n  function handleUpdate(card) {\n    setCards(existing => existing.map(c => (c.id === card.id ? card : c)));\n  }\n\n  return (\n    <div>\n      <header className=\"app_header\">\n        <h1 className=\"app_header_title\">Flash Cards</h1>\n        <h2 className=\"app_header_title-secundary\">\n          Retention Through Repitition\n        </h2>\n      </header>\n      <main>\n        <h3 className=\"app_main_title\">Your Cards</h3>\n        <Router basename=\"/flash-cards-app\">\n          <CardList\n            path=\"/\"\n            cards={cards}\n            onAdd={handleAdd}\n            onUpdate={handleUpdate}\n            onRemove={handleRemove}\n          />\n          <Practice path=\"/practice\" cards={cards} />\n        </Router>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}